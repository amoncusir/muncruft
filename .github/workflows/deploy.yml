name: "Minecraft Deploy"

on: push

jobs:

#  check:
#    name: Check Terraform
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        working-directory: infrastructure
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v1
#        with:
#          hetzner_token: ${{ secrets.HCLOUD_TOKEN }}
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
#
#      - name: Terraform FMT
#        id: fmt
#        run: terraform fmt -check
#        continue-on-error: true
#
#      - name: Terraform Init
#        id: init
#        run: terraform init
#
#      - name: Terraform Validate
#        id: validate
#        run: terraform validate -no-color
#
#      - name: Terraform Plan
#        id: plan
#        run: terraform plan -no-color
#        continue-on-error: true

  deploy:
    name: Deploy Server
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
#    needs: check
    environment: 'cloud'
    defaults:
      run:
        shell: bash
        working-directory: infrastructure
    steps:
      - uses: montudor/action-zip@v1

      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout Backend
        uses: actions/checkout@v2
        with:
          repository: amoncusir/muncruft-backend
          token: ${{ secrets.PAT_GITHUB }}
          path: infrastructure/backend
          ref: main

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          hetzner_token: ${{ secrets.HCLOUD_TOKEN }}
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}

      - name: Terraform FMT
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Decrypt Backend
        env:
          BACKEND_PWD: ${{ secrets.BACKEND_PWD }}
        run: |
          if [ -f "backend/muncruft.zip" ]; then
            unzip -P "$BACKEND_PWD" "muncruft.zip" -d backend/
            rm "muncruft.zip"
          else
            echo "No contains any zip in backup repository"
          fi

      - name: Edit Backend README.md
        run: |
          echo $(pwd)
          cd backend/
          echo $(cat README.md)
          echo $GITHUB_SHA > README.md
          echo "-------" >> README.md
          echo $(cat README.md)

      - name: Encrypt Backend
        env:
          BACKEND_PWD: ${{ secrets.BACKEND_PWD }}
        run: |
          if [ -n "$(ls -A backend 2>/dev/null)" ]; then
            zip -mr -e --password "$BACKEND_PWD" "backend/muncruft.zip" ./backend/*
          else
            echo "No contains any file in backup repository"
          fi

      - name: Terraform Save State
        run: |
          cd backend
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "generated"
          git push

